{
  "name": "extas/workflow",
  "package_classes": [
    {
      "interface": "extas\\interfaces\\workflows\\schemas\\IWorkflowSchemaRepository",
      "class": "extas\\components\\workflows\\schemas\\WorkflowSchemaRepository"
    },
    {
      "interface": "extas\\interfaces\\workflows\\transitions\\IWorkflowTransitionRepository",
      "class": "extas\\components\\workflows\\transitions\\WorkflowTransitionRepository"
    },
    {
      "interface": "extas\\interfaces\\workflows\\states\\IWorkflowStateRepository",
      "class": "extas\\components\\workflows\\states\\WorkflowStateRepository"
    },
    {
      "interface": "extas\\interfaces\\workflows\\transitions\\dispatchers\\ITransitionDispatcherRepository",
      "class": "extas\\components\\workflows\\transitions\\dispatchers\\TransitionDispatcherRepository"
    },
    {
      "interface": "extas\\interfaces\\workflows\\transitions\\dispatchers\\ITransitionDispatcherTemplateRepository",
      "class": "extas\\components\\workflows\\transitions\\dispatchers\\TransitionDispatcherTemplateRepository"
    },
    {
      "interface": "extas\\interfaces\\workflows\\entities\\IWorkflowEntityTemplateRepository",
      "class": "extas\\components\\workflows\\entities\\WorkflowEntityTemplateRepository"
    }
  ],
  "plugins": [
    {
      "class": "extas\\components\\plugins\\PluginInstallWorkflowSchemas",
      "stage": "extas.install"
    },
    {
      "class": "extas\\components\\plugins\\PluginInstallWorkflowTransitions",
      "stage": "extas.install"
    },
    {
      "class": "extas\\components\\plugins\\PluginInstallWorkflowStates",
      "stage": "extas.install"
    },
    {
      "class": "extas\\components\\plugins\\PluginInstallTransitionDispatchers",
      "stage": "extas.install"
    },
    {
      "class": "extas\\components\\plugins\\PluginInstallTransitionDispatcherTemplates",
      "stage": "extas.install"
    },
    {
      "class": "extas\\components\\plugins\\PluginInstallWorkflowEntityTemplates",
      "stage": "extas.install"
    }
  ],
  "workflow_transition_dispatcher_templates": [
    {
      "name": "condition__datetime",
      "title": "Текущее время",
      "description": "Ограничение на текущее время для перехода",
      "class": "extas\\components\\plugins\\workflows\\conditions\\ConditionDateTime",
      "type": "condition",
      "parameters": [
        {
          "name": "datetime",
          "template": "datetime",
          "value": "",
          "title": "Дата и время",
          "description": "Timestamp даты и времени"
        },
        {
          "name": "compare",
          "template": "string",
          "template@string": {
            "allowed": [
              {
                "name": "equal",
                "title": "=",
                "description": "Равно"
              },
              {
                "name": "notEqual",
                "title": "!=",
                "description": "Не равно"
              },
              {
                "name": "greater",
                "title": ">",
                "description": "Больше"
              },
              {
                "name": "lower",
                "title": "<",
                "description": "Меньше"
              }
            ]
          },
          "value": "equal",
          "title": "Условие",
          "description": "Условие сравнения. Допускается: equal, notEqual, greater, lower"
        }
      ]
    },
    {
      "name": "validator__context_params",
      "title": "Параметры контекста",
      "description": "Проверка наличия в контексте необходимых параметров",
      "class": "extas\\components\\plugins\\workflows\\validators\\ValidatorContextHasAllParams",
      "type": "validator",
      "parameters": []
    },
    {
      "name": "validator__entity_params",
      "title": "Параметры сущности",
      "description": "Проверка наличия в сущности необходимых параметров",
      "class": "extas\\components\\plugins\\workflows\\validators\\ValidatorEntityHasAllParams",
      "type": "validator",
      "parameters": []
    },
    {
      "name": "condition__field_value_required",
      "title": "Не пустое поле",
      "description": "Проверка на наличия в содержании поля не пустого значения",
      "class": "extas\\components\\plugins\\workflows\\conditions\\ConditionFieldValueRequired",
      "type": "condition",
      "parameters": [
        {
          "name": "field_name",
          "template": "string",
          "value": "",
          "title": "Имя поля",
          "description": "Имя поля, значение которого должно что-то содержать"
        }
      ]
    },
    {
      "name": "condition__field_value",
      "title": "Равенство значения",
      "description": "Проверка на равенство значения поля с указанным значением",
      "class": "extas\\components\\plugins\\workflows\\conditions\\ConditionFieldValue",
      "type": "condition",
      "parameters": [
        {
          "name": "field_name",
          "template": "string",
          "title": "Имя поля",
          "description": "Имя поля из шаблона сущности"
        },
        {
          "name": "field_value",
          "template": "string",
          "title": "Значение поля",
          "description": "Значение, которому должно ровняться содержимое соответствующего поля"
        }
      ]
    },
    {
      "name": "condition__field_value_compare",
      "title": "Значение поля",
      "description": "Проверка соответствия содержимого поля указаннмоу значению",
      "class": "extas\\components\\plugins\\workflows\\conditions\\ConditionFieldValueCompare",
      "type": "condition",
      "parameters": [
        {
          "name": "field_name",
          "template": "string",
          "title": "Имя поля",
          "description": "Имя поля из шаблона сущности"
        },
        {
          "name": "field_compare",
          "template": "string",
          "title": "Условие",
          "description": "Условие сравнения значения и содержимого поля",
          "template@string": {
            "allow": [
              {
                "name": "equal",
                "title": "=",
                "description": "Равно"
              },
              {
                "name": "notEqual",
                "title": "!=",
                "description": "Не равно"
              },
              {
                "name": "greater",
                "title": ">",
                "description": "Больше"
              },
              {
                "name": "lower",
                "title": "<",
                "description": "Меньше"
              },
              {
                "name": "greaterOrEqual",
                "title": ">=",
                "description": "Больше или равно"
              },
              {
                "name": "lowerOrEqual",
                "title": "<=",
                "description": "Меньше или равно"
              },
              {
                "name": "empty",
                "title": "-",
                "description": "Пустое значение"
              },
              {
                "name": "notEmpty",
                "title": "!-",
                "description": "Не пустое значение"
              },
              {
                "name": "like",
                "title": "~",
                "description": "Содержит"
              },
              {
                "name": "notLike",
                "title": "!~",
                "description": "Не содержит"
              },
              {
                "name": "in",
                "title": "*",
                "description": "Один из"
              },
              {
                "name": "notIn",
                "title": "!*",
                "description": "Не является одним из"
              }
            ]
          }
        },
        {
          "name": "field_value",
          "template": "string",
          "title": "Значение поля",
          "description": "Значение с которым будет сравниваться содержимое соответствующего поля"
        },
        {
          "name": "field_type",
          "template": "string",
          "title": "Тип поля",
          "description": "Тип поля влияет на способ сравнения значения и содержимого поля",
          "template@string": {
            "allow": [
              {
                "name": "string",
                "title": "Строка",
                "description": "Строкове значение"
              },
              {
                "name": "number",
                "title": "Число",
                "description": "Числовое значение"
              }
            ]
          }
        }
      ]
    }
  ]
}